<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Toki</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://vevlins.github.io/"/>
  <updated>2017-12-19T12:55:25.164Z</updated>
  <id>https://vevlins.github.io/</id>
  
  <author>
    <name>Vevlins</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>制作第一个hexo主题</title>
    <link href="https://vevlins.github.io/2017/12/19/%E5%88%B6%E4%BD%9C%E7%AC%AC%E4%B8%80%E4%B8%AAhexo%E4%B8%BB%E9%A2%98/"/>
    <id>https://vevlins.github.io/2017/12/19/制作第一个hexo主题/</id>
    <published>2017-12-19T12:39:22.000Z</published>
    <updated>2017-12-19T12:55:25.164Z</updated>
    
    <content type="html"><![CDATA[<h1 id="制作第一个hexo主题"><a href="#制作第一个hexo主题" class="headerlink" title="制作第一个hexo主题"></a>制作第一个hexo主题</h1><p>Hexo是一个知名的静态博客生成工具，尤其在github用户中广为人知。hexo的主题可以自由变换，但是想要找到一个完全合自己心意的主题仿佛大海捞针。与其不停寻找，不如自己动手制作一个主题，既解决了自己看什么主题都不合心的问题，还能在其中学习更多知识。  </p><p>这里是我写的主题<a href="https://github.com/Vevlins/hexo-theme-toki" target="_blank" rel="noopener">toki</a>以及<a href="https://vevlins.github.io">预览</a>。如果你觉得这篇文章对你起到了一点作用，欢迎你star或者fork进行进一步的学习，不必担心难度，因为这也是我第一个hexo主题。</p><h2 id="hexo主题结构"><a href="#hexo主题结构" class="headerlink" title="hexo主题结构"></a>hexo主题结构</h2><p>目录结构如下：</p><pre><code> .├── _config.yml   ├── layout        │   └── _partial  └── source            ├── css    ├── fonts    └── js</code></pre><p>其中config文件是存储与主题相关的变量，如点赞、评论功能是否开启，在整个站点下也有一个config文件，它是用来存储一些和整个站点有关的，比如站点的标题。而并非所有的hexo主题都支持点赞，所以点赞功能的开启放在具体的theme下更合适。  </p><p>Layout文件夹下存放的是布局模板文件，可以用ejs、jade等编写，里边包含index、post等hexo中默认使用的模板，也可以编写一个自己额外定义的页面，比如about页。对于这些自己额外编写的模板，需要用户自己执行<code>hexo new [layout] &lt;title&gt;</code>中声明<code>layout:about</code>才可以。_partial子文件夹中存放的是一些可以服用的组件或者想要细分的部分，如打赏部分、点赞部分，可以分离出来，使得结构更加清晰明了。</p><p>Source文件夹下存放的是资源文件，比如css文件，字体文件，图片文件等。source文件在最后生成的时候会把其中的文件都直接放在根目录下，所以在文件中引用地址的时候不需要写<code>source</code>，而是直接写<code>./css/app.css</code>就可以。</p><h2 id="hexo变量和函数"><a href="#hexo变量和函数" class="headerlink" title="hexo变量和函数"></a>hexo变量和函数</h2><p>想要编写一个hexo模板，我们在其中必定要添加一些hexo站点下的信息，如网站的title。还有我们之前提到的主题下也有一个config文件，其中的变量我们也需要调用。除了以上两个部分，hexo还提供了一些用来简化操作的辅助函数。<br>具体的变量和辅助函数可以访问<a href="https://hexo.io/" target="_blank" rel="noopener">hexo官网</a>。这里只介绍一些常用的。</p><p>变量： </p><ul><li>page.title</li><li>site.posts</li><li>page.excerpt<br>关于整个站点下的config文件需要通过config.xxx来进行调用，对于这个主题的config文件需要通过theme.xxx来调用。而诸如page、site等就是hexo自身的一些变量了。</li></ul><p>函数：</p><ul><li>&lt;%- list_categories([options]) %&gt;</li><li>&lt;%- titlecase(string) %&gt;</li></ul><h2 id="模板文件"><a href="#模板文件" class="headerlink" title="模板文件"></a>模板文件</h2><p>Hexo已经定义的模板文件有以下几个：</p><ul><li>index</li><li>post</li><li>page</li><li>archive</li><li>category</li><li>tag<br>特别的还有一个layout文件，可以在layout文件中编写一些公共部分，实现在其他页面中的复用，如果你对模板引擎并不了解，我建议你先学习相关知识是非常必要的，不过不用太多，花十几分钟大概理解一下就可以。<br>当然你并不需要都要包括这些模板，只是写了这些模板文件后，你不需要<code>hexo new</code>它，它也有固定的页面地址。每个主题最少可以只包括一个index页面即可。但是为了功能上比较完善，我还是建议最少编写index、post、archive这三个页面。<br>在hexo中编写文件，需要选择一种模板引擎，这里我使用的ejs,hexo自己提供的ejs的支持，而且理解起来也很容易，没什么选择其他的理由。当然如果你想要编写的主题比较庞大，那还是选择自己最顺手的好。<br>我们分别讲解index、post、archive的编写，然后在进行拓展。</li></ul><h3 id="layout页面"><a href="#layout页面" class="headerlink" title="layout页面"></a>layout页面</h3><p>这一页要包含菜单、页脚声明。</p><pre><code class="html">&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;    &lt;head&gt;        &lt;title&gt;&lt;%= config.title %&gt;&lt;/title&gt;             &lt;!-- 引入站点的标题--&gt;        &lt;meta charset=&quot;UTF-8&quot;&gt;        &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;        &lt;%- css(&#39;./css/app.css&#39;) %&gt;          &lt;!-- 这里的css 就是一个辅助函数--&gt;    &lt;/head&gt;    &lt;body&gt;            &lt;%- partial(&#39;_partial/header&#39;) %&gt;            &lt;!-- 引入其他部分--&gt;            &lt;main&gt;                 &lt;%- body %&gt;                &lt;!-- 这里会将其他页面的内容填充进来组成一个完整的页面 --&gt;            &lt;/main&gt;    &lt;%- partial(&#39;_partial/footer&#39;) %&gt;    &lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="index页面"><a href="#index页面" class="headerlink" title="index页面"></a>index页面</h3><p>显然的，这是我们进入网站看到的第一个页面，一般来说，这个页面要包含最近的文章展示，根据个人喜好，也可以添加标签云、最新评论等。</p><pre><code class="html">&lt;section class=&quot;posts&quot;&gt;    &lt;% page.posts.each(function (post) { %&gt;        &lt;article class=&quot;post&quot;&gt;            &lt;h1&gt;                &lt;a class=&quot;title&quot; href=&quot;&lt;%- url_for(post.path) %&gt;&quot;&gt;                     &lt;%= post.title %&gt;                 &lt;/a&gt;            &lt;/h1&gt;            &lt;%- partial(&#39;_partial/meta&#39;,{page:post}) %&gt;            &lt;div class=&quot;content&quot;&gt;                &lt;% if(post.excerpt) {%>                <%- post.excerpt="" %="">                <%} else{="" %&gt;="" &lt;%-="" post.content="" &lt;%="" }="" &lt;="" div&gt;="" &lt;div="" class="&quot;continue&quot;&gt;" &lt;a="" href="&quot;&lt;%-" url_for(post.path)="" %&gt;&quot;&gt;="" __(&#39;post.continue&#39;)="" -%&gt;="" &lt;i="" fa-angle-right&quot;="" aria-hidden="&quot;true&quot;&gt;&lt;/i&gt;" a&gt;="" article&gt;="" })="" section&gt;="" partial(&#39;_partial="" paginator&#39;)="" <="" code=""></%}></%-></code></pre><p>这个页面看起来要复杂了许多。我们从大到小入手：通过page.posts我们获取到了文章列表，对于其中的post，又有title、tag、category等量。content四获取文章的内容，而excerpt是用来获取摘要。如果在书写markdown 文章时加入<code>&lt;!-- more --&gt;</code>那么在这之前的内容将会被视为摘要，如果你懒得做，也可以使用自动生成摘要的插件。<br><code>&lt;%- partial(&#39;_partial/meta&#39;,{page:post}) %&gt;</code>这段代码中比layout页面中的引入要多出了一个参数，这里是将meta这个页面中的page都赋值为post。主要是用来进行参数传递作用，这里是因为meta不仅在主页要用，在文章页也要使用，而文章页中我们时通过page.tags来取得内容的。<br><code>&lt;%- __(&#39;Post.Continue&#39;) -%&gt;</code>这个写法看起来有些奇怪，它也是一个辅助函数吗？虽然在hexo的文档中没有把它明确为一个辅助函数，但实际上这确实是一个函数，它的作用是进行站点国际化。听起来很高大上吧！不过其实实现很简单，在上述的项目结构中我们还可以增加一个language目录，其中针对每一种语言增加一个yml文件，把需要国际化的量储存在里边，根据整个站点config中的language声明的语言而进行动态调整。比如，我们在en.yml 将Continue声明为continue，在zh-CN.yml中声明为继续阅读。<br><code>&lt;%- partial(&#39;_partial/paginator&#39;) %&gt;</code>这里我们引入了一个paginator组件，它是用来分页的，跟普通的分页不同，hexo中分页的实际工作我们丝毫没有涉及，只需要简单地使用辅助函数就可以：</p><pre><code class="html">&lt;%- paginator({      prev_text: &quot;&amp;laquo; &quot;+  __(&#39;Paginator.Prev&#39;),      next_text: __(&#39;Paginator.Next&#39;)+&quot; &amp;raquo;&quot;  }) %&gt;</code></pre><h3 id="post页面"><a href="#post页面" class="headerlink" title="post页面"></a>post页面</h3><p>有了前面两个页面的基础，这里就不废话了。</p><pre><code class="html">&lt;article class=&quot;post&quot;&gt;            &lt;h1&gt;                &lt;a class=&quot;title&quot; href=&quot;&lt;%- url_for(page.path) %&gt;&quot;&gt;                     &lt;%= page.title %&gt;                 &lt;/a&gt;            &lt;/h1&gt;&lt;%- partial(&#39;_partial/meta&#39;) %&gt;&lt;%- partial(&#39;_partial/toc&#39;) %&gt;            &lt;div class=&quot;content&quot;&gt;                &lt;%- page.content %&gt;            &lt;/div&gt;&lt;%- partial(&#39;_partial/copyright&#39;) %&gt;&lt;/article&gt;</code></pre><h3 id="archive页面"><a href="#archive页面" class="headerlink" title="archive页面"></a>archive页面</h3><pre><code class="html">&lt;section class=&quot;archive&quot;&gt;  &lt;ul class=&quot;post-archive&quot;&gt;    &lt;% var last = 1997 %&gt;    &lt;% page.posts.each(function (post) { %&gt;    &lt;% if (last != post.date.year()){ %&gt;     &lt;span class=&quot;year&quot;&gt; &lt;a&gt;&lt;%=post.date.year()%&gt;&lt;/a&gt;&lt;/span&gt;      &lt;% last = post.date.year()%&gt;    &lt;%}%&gt;      &lt;li class=&quot;post-item&quot;&gt;        &lt;span class=&quot;date&quot;&gt;&lt;%= date(post.date, &quot;MM-DD&quot;) %&gt;&lt;/span&gt;        &lt;a class=&quot;title&quot; href=&quot;&lt;%- url_for(post.path) %&gt;&quot;&gt;&lt;%= post.title %&gt;&lt;/a&gt;      &lt;/li&gt;    &lt;% }) %&gt;  &lt;/ul&gt;&lt;/section&gt;&lt;%- partial(&#39;_partial/paginator&#39;) %&gt;</code></pre><p>对这个页面，我们只讲解一下<code>&lt;% var last = 1997 %&gt;</code>,这里参考了hexo自带主题landscape的方案。为了实现按照不同年份归档，先定义一个很小的年份值，如果以后的年份不同于之前的值，那就把last置为它，并且显示一个较大的年份块。</p><h2 id="添加样式"><a href="#添加样式" class="headerlink" title="添加样式"></a>添加样式</h2><p>这里我们选用的是stylus来书写css，选择它的原因也很简单，因为hexo自带。</p><p>这里已经没什么需要额外讲解的了，css总不会也跟其他的有不同吧。只是请注意，为了保证你的主题能够被更多人使用，请务必做好不同浏览器的兼容。类似地，你也应该在配置文件中增加更多的自定义开关，你不能默认认为用户总是想向你提供两个打赏的二维码，所以一个二维码的样式呢？或者索性不想要打赏呢？</p><h2 id="提交主题"><a href="#提交主题" class="headerlink" title="提交主题"></a>提交主题</h2><p>经历了以上这些，你的主题已经基本具有可用性了，但是如何让更多人知道并且使用你的主题呢？你可以通过在各种技术型社区发帖，也可以发动身边的人使用。更官方的方案，是向hexo提交自己的主题。你具体可以参考这里<a href="https://hexo.io/zh-cn/docs/themes.html" target="_blank" rel="noopener">主题| Hexo</a>。准备好一份截图，fork一份<a href="https://github.com/hexojs/site" target="_blank" rel="noopener">hexojs/site</a>添加自己的主题信息和截图后再向官方提出pull request请求，不必担心，因为他们真的很友善。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;制作第一个hexo主题&quot;&gt;&lt;a href=&quot;#制作第一个hexo主题&quot; class=&quot;headerlink&quot; title=&quot;制作第一个hexo主题&quot;&gt;&lt;/a&gt;制作第一个hexo主题&lt;/h1&gt;&lt;p&gt;Hexo是一个知名的静态博客生成工具，尤其在github用户中广为人
      
    
    </summary>
    
      <category term="hexo" scheme="https://vevlins.github.io/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://vevlins.github.io/tags/hexo/"/>
    
      <category term="教程" scheme="https://vevlins.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://vevlins.github.io/2017/12/14/Hello-World/"/>
    <id>https://vevlins.github.io/2017/12/14/Hello-World/</id>
    <published>2017-12-14T12:38:07.000Z</published>
    <updated>2017-12-14T12:39:18.005Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><a id="more"></a><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ hexo new &amp;quot;My New Post&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="hello" scheme="https://vevlins.github.io/tags/hello/"/>
    
      <category term="world" scheme="https://vevlins.github.io/tags/world/"/>
    
  </entry>
  
  <entry>
    <title>一份简历</title>
    <link href="https://vevlins.github.io/2017/12/14/%E4%B8%80%E4%BB%BD%E7%AE%80%E5%8E%86/"/>
    <id>https://vevlins.github.io/2017/12/14/一份简历/</id>
    <published>2017-12-14T12:18:59.000Z</published>
    <updated>2017-12-14T14:27:27.596Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://images.ifanr.cn/wp-content/uploads/2015/12/typer.jpg" alt="">  </p><p>首先，一份好的简历不光说明事实，更通过FAB模式来增强其说服力。</p><p>其次，写简历和写议论文不同，过分的论证会显得自夸，反而容易引起反感，所以要点到为止。这里的技巧是，提供论据，把论点留给阅读简历的人自己去得出。放论据要具体，最基本的是要数字化，好的论据要让人印象深刻。</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=450567505&auto=0&height=66"></iframe><p>有同学问，如果我在项目里边没有那么显赫的成绩可以说怎么办？讲不出成绩时，就讲你的成长。因为学习能力也是每家公司都看中的东西。你可以写你在这个项目里边遇到了一个什么样的问题，别人怎么解决的，你怎么解决的，你的方案好在什么地方，最终这个方案的效果如何。</p><p>举个例子，下边内容是虚构的：</p><p>2006年，我参与了手机XX网发布系统WAPCMS的开发（这部分是大家都会写的）。作为核心程序员，我不但完成了网站界面、调度队列的开发工作，更提出了高效的组件级缓存系统，通过碎片化缓冲有效的提升了系统的渲染效率。（这部分是很多同学忘掉的，要写出你在这个项目中具体负责的部分，以及你贡献出来的价值。）在该系统上线后，Web前端性能从10QPS提升到200QPS，服务器由10台减少到3台（通过量化的数字来增强可信度）。2008年我升任WAPCMS项目负责人，带领一个3人小组支持着每天超过2亿的PV（这就是Benefit。你能带给前雇主的价值，也就是你能带给新雇主的价值。）。</p><p><strong>具体</strong>、量化、有说服力，是技术简历特别需要注重的地方。</p><p>以上内容在写完简历后，对每一段进行评估，完成后再删除）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;http://images.ifanr.cn/wp-content/uploads/2015/12/typer.jpg&quot; alt=&quot;&quot;&gt;  &lt;/p&gt;
&lt;p&gt;首先，一份好的简历不光说明事实，更通过FAB模式来增强其说服力。&lt;/p&gt;
&lt;p&gt;其次，写简历和写议
      
    
    </summary>
    
      <category term="求职" scheme="https://vevlins.github.io/categories/%E6%B1%82%E8%81%8C/"/>
    
    
      <category term="简历" scheme="https://vevlins.github.io/tags/%E7%AE%80%E5%8E%86/"/>
    
  </entry>
  
  <entry>
    <title>Dillinger</title>
    <link href="https://vevlins.github.io/2017/12/14/Dillinger/"/>
    <id>https://vevlins.github.io/2017/12/14/Dillinger/</id>
    <published>2017-12-14T11:53:38.000Z</published>
    <updated>2017-12-14T12:01:08.937Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Dillinger"><a href="#Dillinger" class="headerlink" title="Dillinger"></a>Dillinger</h1><p><a href="https://nodesource.com/products/nsolid" target="_blank" rel="noopener"><img src="http://cdn2.jianshu.io/assets/web/web-note-ad-1-10f08e404d3887d2d45a4bc8f1831403.png" alt="N|Solid"></a></p><p>Dillinger is a cloud-enabled, mobile-ready, offline-storage, AngularJS powered HTML5 Markdown editor.</p><ul><li>Type some Markdown on the left</li><li>See HTML in the right</li><li>Magic </li></ul><a id="more"></a><h1 id="New-Features"><a href="#New-Features" class="headerlink" title="New Features!"></a>New Features!</h1><ul><li>Import a HTML file and watch it magically convert to Markdown</li><li>Drag and drop images (requires your Dropbox account be linked)</li></ul><p>You can also:</p><ul><li>Import and save files from GitHub, Dropbox, Google Drive and One Drive</li><li>Drag and drop markdown and HTML files into Dillinger</li><li>Export documents as Markdown, HTML and PDF</li></ul><p>Markdown is a lightweight markup language based on the formatting conventions that people naturally use in email.  As <a href="http://daringfireball.net" target="_blank" rel="noopener">John Gruber</a> writes on the <a href="http://daringfireball.net/projects/markdown/" target="_blank" rel="noopener">Markdown site</a></p><blockquote><p>The overriding design goal for Markdown’sformatting syntax is to make it as readable as possible. The idea is that a Markdown-formatted document should be publishable as-is, as plain text, without looking like it’s been marked up with tags or formatting instructions.</p></blockquote><p>This text you see here is <em>actually</em> written in Markdown! To get a feel for Markdown’s syntax, type some text into the left window and watch the results in the right.</p><h3 id="Tech"><a href="#Tech" class="headerlink" title="Tech"></a>Tech</h3><p>Dillinger uses a number of open source projects to work properly:</p><ul><li><a href="http://angularjs.org" target="_blank" rel="noopener">AngularJS</a> - HTML enhanced for web apps!</li><li><a href="http://ace.ajax.org" target="_blank" rel="noopener">Ace Editor</a> - awesome web-based text editor</li><li><a href="https://github.com/markdown-it/markdown-it" target="_blank" rel="noopener">markdown-it</a> - Markdown parser done right. Fast and easy to extend.</li><li><a href="http://twitter.github.com/bootstrap/" target="_blank" rel="noopener">Twitter Bootstrap</a> - great UI boilerplate for modern web apps</li><li><a href="http://nodejs.org" target="_blank" rel="noopener">node.js</a> - evented I/O for the backend</li><li><a href="http://expressjs.com" target="_blank" rel="noopener">Express</a> - fast node.js network app framework <a href="http://twitter.com/tjholowaychuk" target="_blank" rel="noopener">@tjholowaychuk</a></li><li><a href="http://gulpjs.com" target="_blank" rel="noopener">Gulp</a> - the streaming build system</li><li><a href="http://breakdance.io" target="_blank" rel="noopener">Breakdance</a> - HTML to Markdown converter</li><li><a href="http://jquery.com" target="_blank" rel="noopener">jQuery</a> - duh</li></ul><p>And of course Dillinger itself is open source with a <a href="https://github.com/joemccann/dillinger" target="_blank" rel="noopener">public repository</a><br> on GitHub.</p><h3 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h3><p>Dillinger requires <a href="https://nodejs.org/" target="_blank" rel="noopener">Node.js</a> v4+ to run.</p><p>Install the dependencies and devDependencies and start the server.</p><pre><code class="sh">$ cd dillinger$ npm install -d$ node app</code></pre><p>For production environments…</p><pre><code class="sh">$ npm install --production$ NODE_ENV=production node app</code></pre><h3 id="Plugins"><a href="#Plugins" class="headerlink" title="Plugins"></a>Plugins</h3><p>Dillinger is currently extended with the following plugins. Instructions on how to use them in your own application are linked below.</p><table><thead><tr><th>Plugin</th><th>README</th></tr></thead><tbody><tr><td>Dropbox</td><td><a href="https://github.com/joemccann/dillinger/tree/master/plugins/dropbox/README.md" target="_blank" rel="noopener">plugins/dropbox/README.md</a></td></tr><tr><td>Github</td><td><a href="https://github.com/joemccann/dillinger/tree/master/plugins/github/README.md" target="_blank" rel="noopener">plugins/github/README.md</a></td></tr><tr><td>Google Drive</td><td><a href="https://github.com/joemccann/dillinger/tree/master/plugins/googledrive/README.md" target="_blank" rel="noopener">plugins/googledrive/README.md</a></td></tr><tr><td>OneDrive</td><td><a href="https://github.com/joemccann/dillinger/tree/master/plugins/onedrive/README.md" target="_blank" rel="noopener">plugins/onedrive/README.md</a></td></tr><tr><td>Medium</td><td><a href="https://github.com/joemccann/dillinger/tree/master/plugins/medium/README.md" target="_blank" rel="noopener">plugins/medium/README.md</a></td></tr><tr><td>Google Analytics</td><td><a href="https://github.com/RahulHP/dillinger/blob/master/plugins/googleanalytics/README.md" target="_blank" rel="noopener">plugins/googleanalytics/README.md</a></td></tr></tbody></table><h3 id="Development"><a href="#Development" class="headerlink" title="Development"></a>Development</h3><p>Want to contribute? Great!</p><p>Dillinger uses Gulp + Webpack for fast developing.<br>Make a change in your file and instantanously see your updates!</p><p>Open your favorite Terminal and run these commands.</p><p>First Tab:</p><pre><code class="sh">$ node app</code></pre><p>Second Tab:</p><pre><code class="sh">$ gulp watch</code></pre><p>(optional) Third:</p><pre><code class="sh">$ karma test</code></pre><h4 id="Building-for-source"><a href="#Building-for-source" class="headerlink" title="Building for source"></a>Building for source</h4><p>For production release:</p><pre><code class="sh">$ gulp build --prod</code></pre><p>Generating pre-built zip archives for distribution:</p><pre><code class="sh">$ gulp build dist --prod</code></pre><h3 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h3><p>Dillinger is very easy to install and deploy in a Docker container.</p><p>By default, the Docker will expose port 8080, so change this within the Dockerfile if necessary. When ready, simply use the Dockerfile to build the image.</p><pre><code class="sh">cd dillingerdocker build -t joemccann/dillinger:${package.json.version}</code></pre><p>This will create the dillinger image and pull in the necessary dependencies. Be sure to swap out <code>${package.json.version}</code> with the actual version of Dillinger.</p><p>Once done, run the Docker image and map the port to whatever you wish on your host. In this example, we simply map port 8000 of the host to port 8080 of the Docker (or whatever port was exposed in the Dockerfile):</p><pre><code class="sh">docker run -d -p 8000:8080 --restart=&quot;always&quot; &lt;youruser&gt;/dillinger:${package.json.version}</code></pre><p>Verify the deployment by navigating to your server address in your preferred browser.</p><pre><code class="sh">127.0.0.1:8000</code></pre><h4 id="Kubernetes-Google-Cloud"><a href="#Kubernetes-Google-Cloud" class="headerlink" title="Kubernetes + Google Cloud"></a>Kubernetes + Google Cloud</h4><p>See <a href="https://github.com/joemccann/dillinger/blob/master/KUBERNETES.md" target="_blank" rel="noopener">KUBERNETES.md</a></p><h3 id="Todos"><a href="#Todos" class="headerlink" title="Todos"></a>Todos</h3><ul><li>Write MORE Tests</li><li>Add Night Mode</li></ul><h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p>MIT</p><p><strong>Free Software, Hell Yeah!</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Dillinger&quot;&gt;&lt;a href=&quot;#Dillinger&quot; class=&quot;headerlink&quot; title=&quot;Dillinger&quot;&gt;&lt;/a&gt;Dillinger&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://nodesource.com/products/nsolid&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;img src=&quot;http://cdn2.jianshu.io/assets/web/web-note-ad-1-10f08e404d3887d2d45a4bc8f1831403.png&quot; alt=&quot;N|Solid&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Dillinger is a cloud-enabled, mobile-ready, offline-storage, AngularJS powered HTML5 Markdown editor.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Type some Markdown on the left&lt;/li&gt;
&lt;li&gt;See HTML in the right&lt;/li&gt;
&lt;li&gt;Magic &lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Dillinger" scheme="https://vevlins.github.io/tags/Dillinger/"/>
    
      <category term="Online" scheme="https://vevlins.github.io/tags/Online/"/>
    
  </entry>
  
  <entry>
    <title>Welcome to MWeb</title>
    <link href="https://vevlins.github.io/2017/12/14/Welcome-to-MWeb/"/>
    <id>https://vevlins.github.io/2017/12/14/Welcome-to-MWeb/</id>
    <published>2017-12-14T05:46:23.000Z</published>
    <updated>2017-12-14T12:01:22.758Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Welcome-to-MWeb"><a href="#Welcome-to-MWeb" class="headerlink" title="Welcome to MWeb"></a>Welcome to MWeb</h1><p>What is MWeb? MWeb is a Pro Markdown writing, note taking and static blog generator App.</p><p>MWeb has two Mode, External Mode and Library Mode.<br>In External Mode, you can edit classic text and markdown files from anywhere on your Mac. As an example, you can point MWeb to a folder on Dropbox. Shortcuts <code>CMD + E</code> or <code>View</code> - <code>Open External</code> to open External Mode.<br>Library Mode design for note taking and static blog/website generator. Shortcuts <code>CMD + L</code> or <code>View</code> - <code>Open Library</code> to open Library Mode.<br>External Mode’s folders and Library Mode are supported <strong>Full Text Search</strong>, drag &amp; drop or paste to insert images.</p><a id="more"></a><h2 id="View-Mode-and-Live-Preview"><a href="#View-Mode-and-Live-Preview" class="headerlink" title="View Mode and Live Preview"></a>View Mode and Live Preview</h2><p>For Minimal UI, MWeb’s interface only has a few buttons. The right-top corner buttons shortcuts: <code>CMD + 7/8/9</code>. <code>CMD + 7</code> is Library Mode only. For enable Typewriter Scrolling, Dark Mode and switch panes, please check the <code>View</code> menu.</p><ul><li>Shortcut: <code>CMD + 1</code> to toggle Editor Only and Three Panes.</li><li>Shortcut: <code>CMD + 2</code> to toggle Two Panes and Editor Only.</li><li>Shortcut: <code>CMD + 3</code> to toggle Three Panes and Editor Only.</li><li>Shortcut: <code>CMD + 4</code> to toggle Editor/Preview and Three Panes.</li><li>Shortcut: <code>CMD + R</code> to toggle Editor and Live Preview.</li></ul><p><strong>Note</strong>: When <code>Preferences</code> - <code>General</code> - <code>Resize window when hide pane</code> is enable, shortcuts <code>CMD + 1/2/3/4</code> behavior will be changed. You can enable this option and try it. When the <code>Live Preview (CMD + R) open new window</code> is enable, shortcut <code>CMD + R</code> will open new window for Live Preview.</p><h2 id="More-about-MWeb"><a href="#More-about-MWeb" class="headerlink" title="More about MWeb"></a>More about MWeb</h2><ul><li>MWeb used Github Flavored Markdown syntax, please open <code>Help</code> - <code>Markdown syntax</code> for detail.</li><li>MWeb official website: <a href="http://www.mweb.im" target="_blank" rel="noopener">http://www.mweb.im</a></li><li>MWeb documents: <code>Help</code> - <code>Help...</code> or <a href="http://www.mweb.im/help.html" target="_blank" rel="noopener">http://www.mweb.im/help.html</a>.</li></ul><h2 id="Help-us-to-make-MWeb-better"><a href="#Help-us-to-make-MWeb-better" class="headerlink" title="Help us to make MWeb better!"></a>Help us to make MWeb better!</h2><ol><li>Tell your friends about MWeb.</li><li>Send a feedback: <a href="&#x6d;&#97;&#x69;&#x6c;&#x74;&#x6f;&#x3a;&#99;&#x6f;&#100;&#101;&#x72;&#102;&#111;&#x72;&#97;&#x72;&#x74;&#43;&#x32;&#51;&#x33;&#64;&#x67;&#x6d;&#x61;&#x69;&#108;&#x2e;&#x63;&#x6f;&#x6d;">&#99;&#x6f;&#100;&#101;&#x72;&#102;&#111;&#x72;&#97;&#x72;&#x74;&#43;&#x32;&#51;&#x33;&#64;&#x67;&#x6d;&#x61;&#x69;&#108;&#x2e;&#x63;&#x6f;&#x6d;</a></li><li>Leave a review or at least a rating in Mac App Store.</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Welcome-to-MWeb&quot;&gt;&lt;a href=&quot;#Welcome-to-MWeb&quot; class=&quot;headerlink&quot; title=&quot;Welcome to MWeb&quot;&gt;&lt;/a&gt;Welcome to MWeb&lt;/h1&gt;&lt;p&gt;What is MWeb? MWeb is a Pro Markdown writing, note taking and static blog generator App.&lt;/p&gt;
&lt;p&gt;MWeb has two Mode, External Mode and Library Mode.&lt;br&gt;In External Mode, you can edit classic text and markdown files from anywhere on your Mac. As an example, you can point MWeb to a folder on Dropbox. Shortcuts &lt;code&gt;CMD + E&lt;/code&gt; or &lt;code&gt;View&lt;/code&gt; - &lt;code&gt;Open External&lt;/code&gt; to open External Mode.&lt;br&gt;Library Mode design for note taking and static blog/website generator. Shortcuts &lt;code&gt;CMD + L&lt;/code&gt; or &lt;code&gt;View&lt;/code&gt; - &lt;code&gt;Open Library&lt;/code&gt; to open Library Mode.&lt;br&gt;External Mode’s folders and Library Mode are supported &lt;strong&gt;Full Text Search&lt;/strong&gt;, drag &amp;amp; drop or paste to insert images.&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="https://vevlins.github.io/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="MWeb" scheme="https://vevlins.github.io/tags/MWeb/"/>
    
      <category term="Markdown" scheme="https://vevlins.github.io/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>欢迎使用MWeb</title>
    <link href="https://vevlins.github.io/2017/12/14/%E6%AC%A2%E8%BF%8E%E4%BD%BF%E7%94%A8MWeb/"/>
    <id>https://vevlins.github.io/2017/12/14/欢迎使用MWeb/</id>
    <published>2017-12-14T05:42:22.000Z</published>
    <updated>2017-12-14T12:01:38.351Z</updated>
    
    <content type="html"><![CDATA[<h1 id="欢迎使用-MWeb"><a href="#欢迎使用-MWeb" class="headerlink" title="欢迎使用 MWeb"></a>欢迎使用 MWeb</h1><p>首先介绍一下 MWeb 是什么，MWeb 是专业的 Markdown 写作、记笔记、静态博客生成软件。</p><p>然后这里<strong>重点说明</strong>一下：MWeb 有<strong>两个模式</strong>，外部模式和文档库模式。外部模式中把本地硬盘或 Dropbox 等网盘的文件夹引入，就可以使用 MWeb 的拖拽、粘贴插入图片、图床等特色功能。文档库模式设计为用于记笔记和静态博客生成。对于有<strong>同步和协作需求</strong>的朋友，请使用外部模式！使用视图菜单或者快捷键 <code>CMD + E</code> 可以打开外部模式，<code>CMD + L</code> 可以打开文档库。</p><a id="more"></a><h2 id="MWeb-大概用法、视图模式和预览界面"><a href="#MWeb-大概用法、视图模式和预览界面" class="headerlink" title="MWeb 大概用法、视图模式和预览界面"></a>MWeb 大概用法、视图模式和预览界面</h2><p>MWeb 使用菜单、快捷键和少量按钮完成所有操作，一般常用的操作都会有快捷键。整个界面使用三栏式结构，非常简洁。左边的第一第二栏是使用<strong>右键</strong>和底部的几个按钮操作，另外就是右上角有三个按钮了（外部模式是两个），快捷键分别是：<code>CMD + 7/8/9</code>。另外就是切换视图模式的快捷键了，建议看一下 <code>标记</code> 菜单和 <code>视图</code> 菜单。</p><ul><li>快捷键：<code>CMD + 1</code> 是在仅编辑器模式和三栏模式中切换。</li><li>快捷键：<code>CMD + 2</code> 是在二栏模式和仅编辑器模式中切换。</li><li>快捷键：<code>CMD + 3</code> 是在三栏模式和仅编辑器模式中切换。</li><li>快捷键：<code>CMD + 4</code> 是在编辑器/预览模式和三栏模式中切换。</li><li>快捷键：<code>CMD + R</code> 是在编辑器和预览模式中切换。</li></ul><p><strong>特别说明</strong>：当 <code>偏好设置</code> - <code>通用设置</code> 中 <code>切换视图模式（二三栏）时，保持编辑器大小不变</code> 被勾选后，<code>CMD + 1/2/3/4</code> 的行为会发生变化，具体如何，可以尝试一下。而 <code>在新窗口中打开实时预览（CMD + R）</code> 这个选项被选中后，快捷键 <code>CMD + R</code> 会打开新的窗口来预览文档。</p><h2 id="更多的了解-MWeb"><a href="#更多的了解-MWeb" class="headerlink" title="更多的了解 MWeb"></a>更多的了解 MWeb</h2><ul><li>MWeb 使用的是 Github Flavored Markdown 语法，请一定要打开 <code>帮助</code> - <code>Markdown 语法</code> 菜单看一下。</li><li>请一定要去官网首页看看，网址：<a href="http://zh.mweb.im" target="_blank" rel="noopener">http://zh.mweb.im</a>。</li><li>请一定要看一下官网的帮助，用菜单 <code>帮助</code> - <code>帮助...</code> 即可打开，也可以用网址：<a href="http://zh.mweb.im/help.html" target="_blank" rel="noopener">http://zh.mweb.im/help.html</a>。</li></ul><h2 id="帮助我们改进-MWeb"><a href="#帮助我们改进-MWeb" class="headerlink" title="帮助我们改进 MWeb"></a>帮助我们改进 MWeb</h2><p>如果你喜欢 MWeb，想让它变得更好，你可以：</p><ol><li>推荐 MWeb，让更多的人知道。</li><li>给我们发反馈和建议：<a href="&#x6d;&#97;&#x69;&#108;&#x74;&#x6f;&#58;&#99;&#x6f;&#x64;&#x65;&#x72;&#102;&#x6f;&#x72;&#x61;&#x72;&#x74;&#x2b;&#50;&#x33;&#51;&#x40;&#103;&#x6d;&#97;&#x69;&#108;&#x2e;&#99;&#111;&#x6d;">&#99;&#x6f;&#x64;&#x65;&#x72;&#102;&#x6f;&#x72;&#x61;&#x72;&#x74;&#x2b;&#50;&#x33;&#51;&#x40;&#103;&#x6d;&#97;&#x69;&#108;&#x2e;&#99;&#111;&#x6d;</a></li><li>在 Mac App Store 上评价 （如果是在 MAS 上购买的话）。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;欢迎使用-MWeb&quot;&gt;&lt;a href=&quot;#欢迎使用-MWeb&quot; class=&quot;headerlink&quot; title=&quot;欢迎使用 MWeb&quot;&gt;&lt;/a&gt;欢迎使用 MWeb&lt;/h1&gt;&lt;p&gt;首先介绍一下 MWeb 是什么，MWeb 是专业的 Markdown 写作、记笔记、静态博客生成软件。&lt;/p&gt;
&lt;p&gt;然后这里&lt;strong&gt;重点说明&lt;/strong&gt;一下：MWeb 有&lt;strong&gt;两个模式&lt;/strong&gt;，外部模式和文档库模式。外部模式中把本地硬盘或 Dropbox 等网盘的文件夹引入，就可以使用 MWeb 的拖拽、粘贴插入图片、图床等特色功能。文档库模式设计为用于记笔记和静态博客生成。对于有&lt;strong&gt;同步和协作需求&lt;/strong&gt;的朋友，请使用外部模式！使用视图菜单或者快捷键 &lt;code&gt;CMD + E&lt;/code&gt; 可以打开外部模式，&lt;code&gt;CMD + L&lt;/code&gt; 可以打开文档库。&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="https://vevlins.github.io/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="MWeb" scheme="https://vevlins.github.io/tags/MWeb/"/>
    
      <category term="Markdown" scheme="https://vevlins.github.io/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>欢迎使用马克飞象</title>
    <link href="https://vevlins.github.io/2016/12/14/%E6%AC%A2%E8%BF%8E%E4%BD%BF%E7%94%A8%E9%A9%AC%E5%85%8B%E9%A3%9E%E8%B1%A1/"/>
    <id>https://vevlins.github.io/2016/12/14/欢迎使用马克飞象/</id>
    <published>2016-12-14T12:06:45.000Z</published>
    <updated>2017-12-14T14:27:19.145Z</updated>
    
    <content type="html"><![CDATA[<h1 id="欢迎使用马克飞象"><a href="#欢迎使用马克飞象" class="headerlink" title="欢迎使用马克飞象"></a>欢迎使用马克飞象</h1><p>@(示例笔记本)[马克飞象|帮助|Markdown]</p><p><strong>马克飞象</strong>是一款专为印象笔记（Evernote）打造的Markdown编辑器，通过精心的设计与技术实现，配合印象笔记强大的存储和同步功能，带来前所未有的书写体验。特点概述：</p><ul><li><strong>功能丰富</strong> ：支持高亮代码块、<em>LaTeX</em> 公式、流程图，本地图片以及附件上传，甚至截图粘贴，工作学习好帮手；</li><li><strong>得心应手</strong> ：简洁高效的编辑器，提供[桌面客户端][1]以及[离线Chrome App][2]，支持移动端 Web；</li><li><strong>深度整合</strong> ：支持选择笔记本和添加标签，支持从印象笔记跳转编辑，轻松管理。</li></ul><hr><h2 id="Markdown简介"><a href="#Markdown简介" class="headerlink" title="Markdown简介"></a>Markdown简介</h2><blockquote><p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面。    —— <a href="https://zh.wikipedia.org/wiki/Markdown" target="_blank" rel="noopener">维基百科</a></p></blockquote><p>正如您在阅读的这份文档，它使用简单的符号标识不同的标题，将某些文字标记为<strong>粗体</strong>或者<em>斜体</em>，创建一个<a href="http://www.example.com" target="_blank" rel="noopener">链接</a>或一个脚注[^demo]。下面列举了几个高级功能，更多语法请按<code>Ctrl + /</code>查看帮助。 </p><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><pre><code class="python">@requires_authorizationdef somefunc(param1=&#39;&#39;, param2=0):    &#39;&#39;&#39;A docstring&#39;&#39;&#39;    if param1 &gt; param2: # interesting        print &#39;Greater&#39;    return (param2 - param1 + 1) or Noneclass SomeClass:    pass&gt;&gt;&gt; message = &#39;&#39;&#39;interpreter... prompt&#39;&#39;&#39;</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;欢迎使用马克飞象&quot;&gt;&lt;a href=&quot;#欢迎使用马克飞象&quot; class=&quot;headerlink&quot; title=&quot;欢迎使用马克飞象&quot;&gt;&lt;/a&gt;欢迎使用马克飞象&lt;/h1&gt;&lt;p&gt;@(示例笔记本)[马克飞象|帮助|Markdown]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;马克飞象
      
    
    </summary>
    
      <category term="markdown" scheme="https://vevlins.github.io/categories/markdown/"/>
    
    
      <category term="马克飞象" scheme="https://vevlins.github.io/tags/%E9%A9%AC%E5%85%8B%E9%A3%9E%E8%B1%A1/"/>
    
  </entry>
  
</feed>
